# kubectl create secret generic mssql --from-literal=password=MyProduct!123
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mssql-pv-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/mssqldata"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mssql-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---      
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mssql
  labels:
    app: mssql
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: mssql
  template:
    metadata:
      labels:
        app: mssql
    spec:
      containers:
        - name: mssql
          image: microsoft/mssql-server-linux:2017-latest
          env:
            - name: MSSQL_PID
              value: Express
            - name: ACCEPT_EULA
              value: "Y"
            - name: SA_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mssql
                  key: password
          ports:
            - name: mssql
              containerPort: 1433
          volumeMounts:
            - name: mssql-persistent-storage
              mountPath: /var/lib/mssql
      volumes:
        - name: mssql-persistent-storage
          persistentVolumeClaim:
            claimName: mssql-pv-claim
---            
apiVersion: v1
kind: Service
metadata:
  name: mssql
  labels:
    app: mssql
spec:
  type: LoadBalancer
 # loadBalancerIP: '172.17.2.81'
  ports:
    - port: 1433
      targetPort: 1433
      protocol: TCP
  selector:
    app: mssql